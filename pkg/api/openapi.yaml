openapi: 3.0.0
info:
  title: Defeed API
  version: 1.0.0
  description: Defeat your fragmented feeds ðŸ’ª

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.defeed.co
    description: Production server

paths:
  /sources:
    get:
      summary: List available sources
      operationId: listSources
      tags:
        - sources
      parameters:
        - name: query
          in: query
          description: Filter sources by name or description.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'

  /sources/{uid}:
    get:
      summary: Get source by UID
      operationId: getSource
      tags:
        - sources
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Source info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '404':
          description: Source not found

  /feeds:
    post:
      summary: Create a feed belonging to the authenticated user
      operationId: createOwnFeed
      tags:
        - feeds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeedRequest"
      responses:
        '200':
          description: Feed created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        '401':
          description: Unauthorized - Invalid or missing authentication token
    get:
      summary: List public feeds and/or those belonging to the authenticated user
      operationId: listFeeds
      tags:
        - feeds
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of feeds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feed"
        '401':
          description: Unauthorized - Invalid or missing authentication token

  /feeds/{uid}:
    put:
      summary: Update a feed belonging to the authenticated user
      operationId: updateOwnFeed
      tags:
        - feeds
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeedRequest"
      responses:
        '200':
          description: Feed updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feed"
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Feed not found
    delete:
      summary: Delete a feed belonging to the authenticated user
      operationId: deleteOwnFeed
      tags:
        - feeds
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Feed deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Feed not found

  /feeds/{uid}/activities:
    get:
      summary: List activities for a feed
      operationId: listFeedActivities
      tags:
        - feeds
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: Time period to filter activities from. Defaults to 'all' for all time.
          schema:
            $ref: '#/components/schemas/ActivityPeriod'
        - name: sortBy
          in: query
          description: Sort method.
          schema:
            $ref: '#/components/schemas/ActivitySortBy'
        - name: query
          in: query
          description: Filter query. Authenticated users can override the default feed query.
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of activities to return.
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Activities list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Feed not found

  /feeds/{uid}/summary:
    get:
      summary: Generate an executive summary of multiple activities
      operationId: getFeedSummary
      tags:
        - feeds
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: Time period to filter activities from. Defaults to 'all' for all time.
          schema:
            $ref: '#/components/schemas/ActivityPeriod'
        - name: query
          in: query
          description: Filter query. Authenticated users can override the default feed query.
          schema:
            type: string
      responses:
        '200':
          description: Summary of feed activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedSummary'
        '202':
          description: Insufficient activity to summarize. Retry later.
        '400':
          description: Invalid request
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Feed not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      in: header
      name: Authorization
      bearerFormat: JWT
      description: Bearer token authentication. Include the token in the Authorization header as 'Bearer {token}'.

  schemas:
    UpdateFeedRequest:
      allOf:
        - $ref: '#/components/schemas/CreateFeedRequest'

    CreateFeedRequest:
      type: object
      required:
        - name
        - icon
        - query
        - sourceUids
      properties:
        name:
          type: string
        icon:
          type: string
        query:
          type: string
        sourceUids:
          type: array
          items:
            type: string

    Feed:
      type: object
      required:
        - uid
        - name
        - icon
        - query
        - sourceUids
        - isPublic
        - createdBy
        - createdAt
      properties:
        uid:
          type: string
        name:
          type: string
        icon:
          type: string
        query:
          type: string
        sourceUids:
          type: array
          items:
            type: string
        isPublic:
          type: boolean
        createdBy:
          description: "ID of the user who created and owns the feed. Feed can only be modified by him."
          type: string
        createdAt:
          type: string
          format: date-time

    Source:
      type: object
      required:
        - uid
        - type
        - name
        - description
        - url
      properties:
        uid:
          type: string
        type:
          $ref: '#/components/schemas/SourceType'
        name:
          type: string
        description:
          type: string
        url:
          type: string

    SourceType:
      type: string
      enum:
        - mastodonAccount
        - mastodonTag
        - hackernewsPosts
        - redditSubreddit
        - lobstersTag
        - lobstersFeed
        - rssFeed
        - githubReleases
        - githubIssues
        - changedetectionWebsite

    ActivitySortBy:
      type: string
      enum:
        - similarity
        - creationDate
      default: similarity

    ActivityPeriod:
      type: string
      enum:
        - all
        - month
        - week
        - day
      default: all
      description: Time period to filter activities from. 'month' means last month, 'week' means last week, 'day' means last day.
      x-go-enum:
        - all
        - month
        - week
        - day

    FeedSummary:
      type: object
      required:
        - overview
        - highlights
        - createdAt
      properties:
        overview:
          type: string
          description: A concise one-paragraph overview of the overall direction and themes
        highlights:
          type: array
          items:
            $ref: '#/components/schemas/FeedHighlight'
          description: List of key highlights extracted from the activities
        createdAt:
          type: string
          format: datetime

    FeedHighlight:
      type: object
      required:
        - content
        - sourceActivityIds
      properties:
        content:
          type: string
          description: A concise highlight summarizing a key point
        sourceActivityIds:
          type: array
          items:
            type: string
          description: List of activity IDs that contributed to this highlight

    Activity:
      type: object
      required:
        - uid
        - sourceUid
        - sourceType
        - title
        - shortSummary
        - fullSummary
        - body
        - url
        - imageUrl
        - createdAt
      properties:
        uid:
          type: string
        sourceUid:
          type: string
        sourceType:
          $ref: '#/components/schemas/SourceType'
        title:
          type: string
        shortSummary:
          type: string
          description: One-line short plain text summary.
        fullSummary:
          type: string
          description: One-paragraph markdown summary.
        body:
          type: string
        url:
          type: string
          format: url
        imageUrl:
          type: string
          format: url
        createdAt:
          type: string
          format: date-time
        similarity:
          type: number
          format: float
          description: Similarity score (0-1) when using semantic search
